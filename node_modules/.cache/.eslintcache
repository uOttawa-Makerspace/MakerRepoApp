[{"/home/arthur/Bureau/sites/makerepo-react-app/src/index.js":"1","/home/arthur/Bureau/sites/makerepo-react-app/src/App.js":"2","/home/arthur/Bureau/sites/makerepo-react-app/src/components/Login.js":"3","/home/arthur/Bureau/sites/makerepo-react-app/src/contexts/UserContext.js":"4","/home/arthur/Bureau/sites/makerepo-react-app/src/components/Home.js":"5","/home/arthur/Bureau/sites/makerepo-react-app/src/components/Logout.js":"6","/home/arthur/Bureau/sites/makerepo-react-app/src/env_variables.js":"7","/home/arthur/Bureau/sites/makerepo-react-app/src/components/SpaceDashboard.js":"8","/home/arthur/Bureau/sites/makerepo-react-app/src/components/Header.js":"9"},{"size":219,"mtime":1634653402036,"results":"10","hashOfConfig":"11"},{"size":1954,"mtime":1635123451222,"results":"12","hashOfConfig":"11"},{"size":6312,"mtime":1635013499581,"results":"13","hashOfConfig":"11"},{"size":87,"mtime":1634653402036,"results":"14","hashOfConfig":"11"},{"size":1196,"mtime":1635013757189,"results":"15","hashOfConfig":"11"},{"size":832,"mtime":1635013499568,"results":"16","hashOfConfig":"11"},{"size":297,"mtime":1635114973446,"results":"17","hashOfConfig":"11"},{"size":12784,"mtime":1635116840735,"results":"18","hashOfConfig":"11"},{"size":287,"mtime":1635038451727,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"159qg9r",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},"/home/arthur/Bureau/sites/makerepo-react-app/src/index.js",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/App.js",["44"],"/home/arthur/Bureau/sites/makerepo-react-app/src/components/Login.js",["45"],"import React, {useContext, useState} from \"react\";\nimport {UserContext} from \"../contexts/UserContext\";\nimport env_variables from \"../env_variables\";\n\nconst Login = () => {\n\n    const {user, setUser} = useContext(UserContext);\n\n    const [usernameEmail, setUsernameEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        fetch(`${env_variables.config.api_url}/login_authentication`, {\n            method: 'post',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username_email: usernameEmail,\n                password: password,\n            })\n        }).then(response => response.json().then(data => {\n            setUser(data['user']);\n        })).catch((error) => {\n            console.error(error);\n        });\n    }\n\n    return (\n        <div>\n            <div\n                className=\"flex flex-col w-full px-4 py-8 bg-white rounded-lg shadow dark:bg-gray-800 sm:px-6 md:px-8 lg:px-10\">\n                <div className=\"self-center mb-6 text-xl font-light text-gray-600 sm:text-2xl dark:text-white\">\n                    Login To Your MakerRepo Account\n                </div>\n                <div className=\"mt-8\">\n                    <form onSubmit={handleLogin}>\n                        <div className=\"flex flex-col mb-2\">\n                            <div className=\"flex relative\">\n                    <span\n                        className=\"rounded-l-md inline-flex  items-center px-3 border-t bg-white border-l border-b  border-gray-300 text-gray-500 shadow-sm text-sm\">\n                        <svg width=\"15\" height=\"15\" fill=\"currentColor\" viewBox=\"0 0 1792 1792\"\n                             xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M1792 710v794q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-794q44 49 101 87 362 246 497 345 57 42 92.5 65.5t94.5 48 110 24.5h2q51 0 110-24.5t94.5-48 92.5-65.5q170-123 498-345 57-39 100-87zm0-294q0 79-49 151t-122 123q-376 261-468 325-10 7-42.5 30.5t-54 38-52 32.5-57.5 27-50 9h-2q-23 0-50-9t-57.5-27-52-32.5-54-38-42.5-30.5q-91-64-262-182.5t-205-142.5q-62-42-117-115.5t-55-136.5q0-78 41.5-130t118.5-52h1472q65 0 112.5 47t47.5 113z\">\n                            </path>\n                        </svg>\n                    </span>\n                                <input type=\"text\" id=\"sign-in-email\" value={usernameEmail}\n                                       onChange={e => setUsernameEmail(e.target.value)} name=\"username_email\"\n                                       className=\" rounded-r-lg flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n                                       placeholder=\"Your email or username\"/>\n                            </div>\n                        </div>\n                        <div className=\"flex flex-col mb-6\">\n                            <div className=\"flex relative\">\n                        <span\n                            className=\"rounded-l-md inline-flex  items-center px-3 border-t bg-white border-l border-b  border-gray-300 text-gray-500 shadow-sm text-sm\">\n                            <svg width=\"15\" height=\"15\" fill=\"currentColor\" viewBox=\"0 0 1792 1792\"\n                                 xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M1376 768q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-320q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45q0-106-75-181t-181-75-181 75-75 181v320h736z\">\n                                </path>\n                            </svg>\n                        </span>\n                                <input type=\"password\" id=\"sign-in-password\" value={password}\n                                       onChange={e => setPassword(e.target.value)} name=\"password\"\n                                       className=\" rounded-r-lg flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n                                       placeholder=\"Your password\"/>\n                            </div>\n                        </div>\n                        {/*<div className=\"flex items-center mb-6 -mt-4\">*/}\n                        {/*    <div className=\"flex ml-auto\">*/}\n                        {/*        <a href=\"#\"*/}\n                        {/*           className=\"inline-flex text-xs font-thin text-gray-500 sm:text-sm dark:text-gray-100 hover:text-gray-700 dark:hover:text-white\">*/}\n                        {/*            Forgot Your Password?*/}\n                        {/*        </a>*/}\n                        {/*    </div>*/}\n                        {/*</div>*/}\n                        <div className=\"flex w-full\">\n                            <button type=\"submit\"\n                                    className=\"py-2 px-4 bg-primary hover:bg-primary focus:ring-primary focus:ring-offset-primary-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \">\n                                Login\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                {/*<div className=\"flex items-center justify-center mt-6\">*/}\n                {/*    <a href=\"#\" target=\"_blank\"*/}\n                {/*       className=\"inline-flex items-center text-xs font-thin text-center text-gray-500 hover:text-gray-700 dark:text-gray-100 dark:hover:text-white\">*/}\n                {/*    <span className=\"ml-2\">*/}\n                {/*        You don&#x27;t have an account?*/}\n                {/*    </span>*/}\n                {/*    </a>*/}\n                {/*</div>*/}\n            </div>\n        </div>\n    )\n};\n\nexport default Login;",["46","47"],"/home/arthur/Bureau/sites/makerepo-react-app/src/contexts/UserContext.js",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/components/Home.js",["48"],"import React, {useContext, useState} from \"react\";\nimport {UserContext} from \"../contexts/UserContext\";\nimport Logout from \"./Logout\";\nimport '../env_variables'\nimport env_variables from \"../env_variables\";\nimport SpaceDashboard from \"./SpaceDashboard\";\n\nconst Home = () => {\n\n    const { user, setUser } = useContext(UserContext);\n    const [ badge, setBadge ] = useState(null);\n\n    const getBadges = () => {\n        fetch(`${env_variables.config.api_url}/badges/populate_badge_list?user_id=1`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }}).then(response => response.json().then((data => {\n                setBadge(JSON.stringify(data))\n            })\n        )).catch((error) => {\n            console.error(error);\n        });\n    }\n\n    return (\n        <div>\n            <h1>Hello {user.name}</h1>\n            <button onClick={getBadges}>Get badges</button>\n            { badge !== null &&\n                <p>{ badge }</p>\n            }\n            <SpaceDashboard />\n            <Logout/>\n        </div>\n    )\n};\n\nexport default Home;","/home/arthur/Bureau/sites/makerepo-react-app/src/components/Logout.js",["49"],"import React, {useContext} from \"react\";\nimport {UserContext} from \"../contexts/UserContext\";\nimport env_variables from \"../env_variables\";\n\nconst Logout = () => {\n\n    const { user, setUser } = useContext(UserContext);\n\n    const handleLogout = (e) => {\n        fetch(`${env_variables.config.api_url}/logout`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }}).then((response) => response.json().then((async data => {\n                setUser(null);\n            })\n        )).catch((error) => {\n            console.error(error);\n        });\n    }\n\n    return (\n        <div>\n            <button onClick={handleLogout}>Logout</button>\n        </div>\n    )\n};\n\nexport default Logout;","/home/arthur/Bureau/sites/makerepo-react-app/src/env_variables.js",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/components/SpaceDashboard.js",["50","51"],"import {UserContext} from \"../contexts/UserContext\";\nimport {useContext, useEffect, useState} from \"react\";\nimport env_variables from \"../env_variables\";\n\nconst SpaceDashboard = () => {\n\n    const {user, setUser} = useContext(UserContext);\n    const [inSpaceUsers, setInSpaceUsers] = useState(null);\n    const [searchedUsers, setSearchedUsers] = useState(null);\n    const [value, setValue] = useState(null);\n\n    useEffect(() => {\n        getCurrentUsers();\n    });\n\n    const getCurrentUsers = () => {\n        fetch(`${env_variables.config.api_url}/staff_dashboard`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(response => response.json().then((data => {\n                setInSpaceUsers(JSON.stringify(data))\n            })\n        )).catch((error) => {\n            console.error(error);\n        });\n    };\n\n    const changeSpace = (space_id) => {\n        fetch(`${env_variables.config.api_url}/staff_dashboard/change_space?space_id=${space_id}`, {\n            method: 'PUT',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(response => response.json().then((data => {\n                getCurrentUsers()\n            })\n        )).catch((error) => {\n            console.error(error);\n        });\n    };\n\n    const getSearchedUsers = () => {\n        fetch(`${env_variables.config.api_url}/staff_dashboard/search?query=${value}`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(response => response.json().then((data => {\n                setSearchedUsers(JSON.stringify(data))\n            })\n        )).catch((error) => {\n            console.error(error);\n        });\n    };\n\n    const signOutUser = (username) => {\n        fetch(`${env_variables.config.api_url}/staff_dashboard/remove_users?dropped_users[]=${username}`, {\n            method: 'PUT',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(response => response.json()).then(\n            (data) => {\n                getCurrentUsers()\n            }\n        ).catch((error) => {\n            console.error(error);\n        });\n    };\n\n    const signInUser = (username) => {\n        fetch(`${env_variables.config.api_url}/staff_dashboard/add_users?added_users[]=${username}`, {\n            method: 'PUT',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(response => response.json()).then(\n            (data) => {\n                getCurrentUsers();\n                getSearchedUsers();\n            }\n        ).catch((error) => {\n            console.error(error);\n        });\n    };\n\n    return (\n        <div>\n            <div>\n                <select onChange={e => changeSpace(e.target.value)} className=\"block w-52 text-gray-700 py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\">\n                    { inSpaceUsers !== null &&  JSON.parse(inSpaceUsers)['space_list'].map((space) => {\n                        return (<option value={space[1]} selected={space[1] === JSON.parse(inSpaceUsers)['space']['id']}>{space[0]}</option>)\n                    })}\n                </select>\n            </div>\n            <div>\n                <div className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                        <button type=\"button\" onClick={() => getCurrentUsers()}\n                                className=\"py-2 px-4 bg-primary focus:ring-primary text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 rounded-lg \">\n                            Refresh Space\n                        </button>\n                </div>\n            </div>\n            <div className=\"px-4 sm:px-8 py-4 overflow-x-auto\">\n                <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\n                    <table className=\"min-w-full leading-normal\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\"\n                                className=\"px-5 py-3 bg-white border-b border-gray-200 text-gray-800 text-left text-sm font-normal\">\n                                Name\n                            </th>\n                            <th scope=\"col\"\n                                className=\"px-5 py-3 bg-white border-b border-gray-200 text-gray-800 text-left text-sm font-normal\">\n                                Email\n                            </th>\n                            <th scope=\"col\"\n                                className=\"px-5 py-3 bg-white border-b border-gray-200 text-gray-800 text-left text-sm font-normal\">\n                                Flagged?\n                            </th>\n                            <th scope=\"col\"\n                                className=\"px-5 py-3 bg-white border-b border-gray-200 text-gray-800 text-left text-sm font-normal\">\n                                Sign Out\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {inSpaceUsers !== null && JSON.parse(inSpaceUsers)['space_users'].map((dashboard_user) => {\n                            return (\n                                <tr>\n                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <div className=\"flex items-center\">\n                                            <div className=\"ml-3\">\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                    {dashboard_user.name}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <p className=\"text-gray-900 whitespace-no-wrap\">\n                                            {dashboard_user.email}\n                                        </p>\n                                    </td>\n                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <p className=\"text-gray-900 whitespace-no-wrap\">\n                                            {dashboard_user.flagged ? 'Yes' : 'No'}\n                                        </p>\n                                    </td>\n                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <button type=\"button\" onClick={() => signOutUser(dashboard_user.username)}\n                                                className=\"py-2 px-4 bg-red-600 hover:bg-red-700 focus:ring-red-500 focus:ring-offset-red-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 rounded-lg \">\n                                            Sign Out\n                                        </button>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            <div className=\"relative\">\n                <input type=\"text\" id=\"rounded-email\" onChange={e => setValue(e.target.value)}\n                       className=\" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n                       placeholder=\"Username, Name\"/>\n            </div>\n            <button type=\"button\" onClick={() => getSearchedUsers()}\n                    className=\"py-2 px-4  bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \">\n                Search\n            </button>\n\n            <div className=\"px-4 sm:px-8 py-4 overflow-x-auto\">\n                <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\n                    <table className=\"min-w-full leading-normal\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\"\n                                className=\"px-5 py-3 bg-white border-b border-gray-200 text-gray-800 text-left text-sm font-normal\">\n                                Name\n                            </th>\n                            <th scope=\"col\"\n                                className=\"px-5 py-3 bg-white border-b border-gray-200 text-gray-800 text-left text-sm font-normal\">\n                                Email\n                            </th>\n                            <th scope=\"col\"\n                                className=\"px-5 py-3 bg-white border-b border-gray-200 text-gray-800 text-left text-sm font-normal\">\n                                Flagged?\n                            </th>\n                            <th scope=\"col\"\n                                className=\"px-5 py-3 bg-white border-b border-gray-200 text-gray-800 text-left text-sm font-normal\">\n                                Sign In\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {searchedUsers !== null && JSON.parse(searchedUsers).map((dashboard_user) => {\n                            return (\n                                <tr>\n                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <div className=\"flex items-center\">\n                                            <div className=\"ml-3\">\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                    {dashboard_user.name}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <p className=\"text-gray-900 whitespace-no-wrap\">\n                                            {dashboard_user.email}\n                                        </p>\n                                    </td>\n                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <p className=\"text-gray-900 whitespace-no-wrap\">\n                                            {dashboard_user.flagged ? 'Yes' : 'No'}\n                                        </p>\n                                    </td>\n                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <button type=\"button\" onClick={() => signInUser(dashboard_user.username)}\n                                                className=\"py-2 px-4 bg-green-600 hover:bg-green-700 focus:ring-green-500 focus:ring-offset-green-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 rounded-lg \">\n                                            Sign In\n                                        </button>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SpaceDashboard;","/home/arthur/Bureau/sites/makerepo-react-app/src/components/Header.js",["52","53","54"],"import React, {useContext, useState} from \"react\";\nimport {UserContext} from \"../contexts/UserContext\";\n\nconst Header = () => {\n    const { user, setUser } = useContext(UserContext);\n\n    return (\n        <div>\n           This is the header\n        </div>\n    )\n}\n\nexport default Header;",{"ruleId":"55","severity":1,"message":"56","line":41,"column":8,"nodeType":"57","endLine":41,"endColumn":10,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":12,"nodeType":"61","messageId":"62","endLine":7,"endColumn":16},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"59","severity":1,"message":"67","line":10,"column":19,"nodeType":"61","messageId":"62","endLine":10,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":7,"column":13,"nodeType":"61","messageId":"62","endLine":7,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":7,"column":12,"nodeType":"61","messageId":"62","endLine":7,"endColumn":16},{"ruleId":"59","severity":1,"message":"67","line":7,"column":18,"nodeType":"61","messageId":"62","endLine":7,"endColumn":25},{"ruleId":"59","severity":1,"message":"68","line":1,"column":28,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":5,"column":13,"nodeType":"61","messageId":"62","endLine":5,"endColumn":17},{"ruleId":"59","severity":1,"message":"67","line":5,"column":19,"nodeType":"61","messageId":"62","endLine":5,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"'setUser' is assigned a value but never used.","'useState' is defined but never used.",{"desc":"72","fix":"73"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [user]",{"range":"74","text":"75"},[1383,1385],"[user]"]