[{"/home/arthur/Bureau/sites/makerepo-react-app/src/index.js":"1","/home/arthur/Bureau/sites/makerepo-react-app/src/App.js":"2","/home/arthur/Bureau/sites/makerepo-react-app/src/helpers.js":"3","/home/arthur/Bureau/sites/makerepo-react-app/src/components/Navbar.tsx":"4","/home/arthur/Bureau/sites/makerepo-react-app/src/components/SpaceHourCard.tsx":"5","/home/arthur/Bureau/sites/makerepo-react-app/src/screens/Help.tsx":"6","/home/arthur/Bureau/sites/makerepo-react-app/src/screens/Home.tsx":"7","/home/arthur/Bureau/sites/makerepo-react-app/src/screens/Login.tsx":"8","/home/arthur/Bureau/sites/makerepo-react-app/src/screens/Profile.tsx":"9","/home/arthur/Bureau/sites/makerepo-react-app/src/screens/SpaceDashboard.tsx":"10","/home/arthur/Bureau/sites/makerepo-react-app/src/screens/SpaceHours.tsx":"11","/home/arthur/Bureau/sites/makerepo-react-app/src/components/TabPanel.tsx":"12","/home/arthur/Bureau/sites/makerepo-react-app/src/utils/env_variables.tsx":"13","/home/arthur/Bureau/sites/makerepo-react-app/src/utils/PublicRoute.tsx":"14","/home/arthur/Bureau/sites/makerepo-react-app/src/utils/PrivateRoute.tsx":"15","/home/arthur/Bureau/sites/makerepo-react-app/src/utils/Common.tsx":"16","/home/arthur/Bureau/sites/makerepo-react-app/src/utils/HTTPRequests.tsx":"17"},{"size":219,"mtime":1634653402036,"results":"18","hashOfConfig":"19"},{"size":2203,"mtime":1643066195865,"results":"20","hashOfConfig":"19"},{"size":240,"mtime":1636490176538,"results":"21","hashOfConfig":"19"},{"size":956,"mtime":1643236511212,"results":"22","hashOfConfig":"19"},{"size":2534,"mtime":1643236754266,"results":"23","hashOfConfig":"19"},{"size":5250,"mtime":1643240646127,"results":"24","hashOfConfig":"19"},{"size":1463,"mtime":1643238432602,"results":"25","hashOfConfig":"19"},{"size":5923,"mtime":1643238487383,"results":"26","hashOfConfig":"19"},{"size":8930,"mtime":1643240573917,"results":"27","hashOfConfig":"19"},{"size":9896,"mtime":1643239336050,"results":"28","hashOfConfig":"19"},{"size":1241,"mtime":1643239430070,"results":"29","hashOfConfig":"19"},{"size":883,"mtime":1643240304958,"results":"30","hashOfConfig":"19"},{"size":384,"mtime":1643241354357,"results":"31","hashOfConfig":"19"},{"size":311,"mtime":1643241322897,"results":"32","hashOfConfig":"19"},{"size":449,"mtime":1643241311309,"results":"33","hashOfConfig":"19"},{"size":590,"mtime":1643240726787,"results":"34","hashOfConfig":"19"},{"size":2001,"mtime":1643240819852,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m9okq9",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/arthur/Bureau/sites/makerepo-react-app/src/index.js",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/App.js",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/helpers.js",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/components/Navbar.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/components/SpaceHourCard.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/screens/Help.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/screens/Home.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/screens/Login.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/screens/Profile.tsx",["72"],"import React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport replaceNoneWithNotAvailable from \"../helpers\";\nimport {getUser} from \"../utils/Common\";\nimport * as HTTPRequest from \"../utils/HTTPRequests\";\nimport {Tabs, Tab} from \"@mui/material\";\nimport {TabPanel, a11yProps} from \"../components/TabPanel\";\n\ntype ProfileParams = {\n    username: string;\n};\n\nconst Profile = () => {\n    const {username} = useParams<ProfileParams>();\n    const [user, setUser] = useState<any>(null);\n    const [profileUser, setProfileUser] = useState<any>(null);\n    const [programs, setPrograms] = useState(null);\n    const [certifications, setCertifications] = useState(null);\n    const [remainingTrainings, setRemainingTraings] = useState(null);\n    const [role, setRole] = useState('')\n    const [devProgram, setDevProgram] = useState(false);\n    const [volunteerProgram, setVolunteerProgram] = useState(false);\n\n    const handleRoleChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n        setRole(event.target.value)\n    }\n\n    const handleDevProgramChange = () => {\n        setDevProgram(!devProgram);\n    }\n\n    const handleVolunteerProgramChange = () => {\n        setVolunteerProgram(!volunteerProgram);\n    }\n\n    const onSubmit = (e: any) => {\n        e.preventDefault();\n        if (e.target.id === \"role-form\") {\n            setUserRole();\n        } else if (e.target.id === \"programs-form\") {\n            setUserPrograms();\n        }\n    }\n\n    useEffect(() => {\n        setUser(getUser());\n        getProfile();\n    }, []);\n\n    const getProfile = () => {\n        HTTPRequest.get(username).then(\n            response => {\n                setProfileUser(response.user)\n                setPrograms(response.programs)\n                setCertifications(response.certifications)\n                setRemainingTraings(response.remaining_trainings)\n\n                if (response.programs.includes(\"Volunteer Program\")) {\n                    setVolunteerProgram(true);\n                }\n\n                if (response.programs.includes(\"Development Program\")) {\n                    setDevProgram(true);\n                }\n            }\n        ).catch((error) => {\n            console.error(error);\n        });\n    };\n\n    const setUserRole = () => {\n        HTTPRequest.patch('admin/users/set_role', {\n            id: profileUser.id,\n            role: role,\n        }).then(() => {\n            getProfile();\n        }).catch((error) => {\n            console.error(error);\n        });\n    };\n\n    const setUserPrograms = () => {\n        HTTPRequest.patch('change_programs', {\n            user_id: profileUser.id,\n            dev_program: devProgram,\n            volunteer: volunteerProgram,\n        }).then(() => {\n            getProfile();\n        }).catch((error) => {\n            console.error(error);\n        });\n    };\n\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event: any, newValue: React.SetStateAction<number>) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div>\n            {profileUser == null || programs == null || certifications == null || remainingTrainings == null ?\n                <div>Loading ...</div>\n                :\n                <div>\n                    <Tabs style={{width: '100vw'}}\n                          value={value}\n                          onChange={handleChange}\n                          variant=\"scrollable\"\n                          scrollButtons=\"auto\"\n                          allowScrollButtonsMobile\n                          aria-label=\"scrollable auto tabs example\"\n                    >\n                        <Tab label=\"About\" {...a11yProps(0)} />\n                        <Tab label=\"Programs\" {...a11yProps(1)} />\n                        <Tab label=\"Certifications\" {...a11yProps(2)} />\n                        {user.role === \"admin\" && <Tab label=\"Role Manager\" {...a11yProps(3)} />}\n                    </Tabs>\n\n                    <TabPanel value={value} index={0}>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">Username: {replaceNoneWithNotAvailable(profileUser.username)}</li>\n                            <li className=\"list-group-item\">Name: {replaceNoneWithNotAvailable(profileUser.name)}</li>\n                            <li className=\"list-group-item\">Email: {replaceNoneWithNotAvailable(profileUser.email)}</li>\n                            <li className=\"list-group-item\">Faculty: {replaceNoneWithNotAvailable(profileUser.faculty)}</li>\n                            <li className=\"list-group-item\">Program: {replaceNoneWithNotAvailable(profileUser.program)}</li>\n                            <li className=\"list-group-item\">Year of\n                                study: {replaceNoneWithNotAvailable(profileUser.year_of_study)}</li>\n                            <li className=\"list-group-item\">Identity: {replaceNoneWithNotAvailable(profileUser.identity)}</li>\n                        </ul>\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                        <form onSubmit={onSubmit} id=\"programs-form\">\n                            <div className=\"list-group mx-0\">\n                                <label className=\"list-group-item d-flex gap-2\">\n                                    <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\"\n                                           checked={devProgram} value={String(devProgram)}\n                                           onChange={handleDevProgramChange}/>\n                                    <span>\n                                        Dev Program\n                                      </span>\n                                </label>\n                                <label className=\"list-group-item d-flex gap-2\">\n                                    <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\"\n                                           checked={volunteerProgram} value={String(volunteerProgram)}\n                                           onChange={handleVolunteerProgramChange}/>\n                                    <span>\n                                        Volunteer\n                                  </span>\n                                </label>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Update Programs</button>\n                        </form>\n                    </TabPanel>\n                    <TabPanel value={value} index={2}>\n                        Certifications\n                    </TabPanel>\n                    <TabPanel value={value} index={3}>\n                        {user.role === \"admin\" &&\n                            <>\n                                <p>Current role: {profileUser.role}</p>\n                                <form onSubmit={onSubmit} id=\"role-form\">\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"role\" id=\"role-admin\"\n                                               value=\"admin\" checked={role === 'admin'} onChange={handleRoleChange}/>\n                                        <label className=\"form-check-label\" htmlFor=\"role-admin\">\n                                            Admin\n                                        </label>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"role\" id=\"radio-staff\"\n                                               value=\"staff\" checked={role === 'staff'} onChange={handleRoleChange}/>\n                                        <label className=\"form-check-label\" htmlFor=\"radio-staff\">\n                                            Staff\n                                        </label>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"role\" id=\"radio-regular\"\n                                               value=\"regular_user\" checked={role === 'regular_user'}\n                                               onChange={handleRoleChange}/>\n                                        <label className=\"form-check-label\" htmlFor=\"radio-regular\">\n                                            Regular User\n                                        </label>\n                                    </div>\n                                    <button className=\"btn btn-primary\">Update role</button>\n                                </form>\n                            </>\n                        }\n                    </TabPanel>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Profile;","/home/arthur/Bureau/sites/makerepo-react-app/src/screens/SpaceDashboard.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/screens/SpaceHours.tsx",["73"],"import React, {useEffect, useState} from \"react\";\nimport {SpaceHourCard} from \"../components/SpaceHourCard\";\nimport axios from \"axios\";\nimport env_variables from \"../utils/env_variables\";\n\nconst SpaceHours = () => {\n\n    const [hours, setHours] = useState<any>(null);\n    const [errors, setErrors] = useState(false);\n\n    const getHours = () => {\n        axios.get(`${env_variables.config.api_url}/hours`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(response => {\n            setHours(response.data);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    useEffect(() => {\n        getHours()\n    }, []);\n\n    return (\n        <div>\n            Space Hours\n\n            { !errors && hours\n                ? <div>\n                    {hours.map((hour: any, index: number | null) => (\n                        <SpaceHourCard hour={hour} key={index} />\n                    ))}\n                </div>\n                : <div>\n                    <SpaceHourCard hour={{}} />\n                    <SpaceHourCard hour={{}} />\n                </div>\n            }\n        </div>\n    )\n};\n\nexport default SpaceHours;","/home/arthur/Bureau/sites/makerepo-react-app/src/components/TabPanel.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/utils/env_variables.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/utils/PublicRoute.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/utils/PrivateRoute.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/utils/Common.tsx",[],"/home/arthur/Bureau/sites/makerepo-react-app/src/utils/HTTPRequests.tsx",[],{"ruleId":"74","severity":1,"message":"75","line":48,"column":8,"nodeType":"76","endLine":48,"endColumn":10,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":9,"column":20,"nodeType":"80","messageId":"81","endLine":9,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.","ArrayExpression",["82"],"@typescript-eslint/no-unused-vars","'setErrors' is assigned a value but never used.","Identifier","unusedVar",{"desc":"83","fix":"84"},"Update the dependencies array to be: [getProfile]",{"range":"85","text":"86"},[1579,1581],"[getProfile]"]